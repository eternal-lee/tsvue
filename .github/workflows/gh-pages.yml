name: Build and Deploy
on: # 监听 main 分支上的 push 事件
  push:
    branches:
      - master
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest # 构建环境使用 ubuntu
    steps: # 步骤
      # 第一步：下载源码（CI/CD拉取代码到自己的本地）
      - name: Checkout
        uses: actions/checkout@v2

      # 第二步：打包构建
      - name: Install and Build # 下载依赖 打包项目
        run: |
          npm install --legacy-peer-deps
          npm run build
      # - run: tar -zcvf release.tgz .nuxt static nuxt.config.js package.json package-lock.json pm2.config.json
      # 把.nuxt、nuxt.config.js等文件，打包压缩为release.tgz

      # BRANCH: 部署到提交到那个分支
      - name: Deploy # 将打包内容发布到 github page
        # uses: JamesIves/github-pages-deploy-action@v4 # 使用别人写好的 actions
        uses: crazy-max/ghaction-github-pages@v2
        with: # 自定义环境变量
          # 部署到 gh-pages 分支
          target_branch: gh-pages
          # TARGET_FOLDER: tsvue # 打包的文件将放到静态服务器 `${自定义}` 目录下
          # 部署目录为 VuePress 的默认输出目录
          build_dir: dist # 必选项
        env:
          # @see https://docs.github.com/cn/actions/reference/authentication-in-a-workflow#about-the-github_token-secret
          GITHUB_TOKEN: ${{ secrets.GH_PAGES_KEY }}
